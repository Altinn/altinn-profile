// <auto-generated />
using System;
using Altinn.Profile.Integrations.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Altinn.Profile.Integrations.Migrations
{
    [DbContext(typeof(ProfileDbContext))]
    [Migration("20250304091657_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Altinn.Profile.Integrations.Entities.MailboxSupplier", b =>
                {
                    b.Property<int>("MailboxSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mailbox_supplier_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("MailboxSupplierId"));

                    b.Property<string>("OrgNumberAk")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character(9)")
                        .HasColumnName("org_number_ak")
                        .IsFixedLength();

                    b.HasKey("MailboxSupplierId")
                        .HasName("mailbox_supplier_pkey");

                    b.HasIndex(new[] { "OrgNumberAk" }, "unique_org_number_ak")
                        .IsUnique();

                    b.ToTable("mailbox_supplier", "contact_and_reservation");
                });

            modelBuilder.Entity("Altinn.Profile.Integrations.Entities.Metadata", b =>
                {
                    b.Property<long>("LatestChangeNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("latest_change_number");

                    b.Property<DateTime?>("Exported")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("exported");

                    b.HasKey("LatestChangeNumber")
                        .HasName("metadata_pkey");

                    b.ToTable("metadata", "contact_and_reservation");
                });

            modelBuilder.Entity("Altinn.Profile.Integrations.Entities.Person", b =>
                {
                    b.Property<int>("ContactAndReservationUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("contact_and_reservation_user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ContactAndReservationUserId"));

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("description");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnName("email_address");

                    b.Property<DateTime?>("EmailAddressLastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("email_address_last_updated");

                    b.Property<DateTime?>("EmailAddressLastVerified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("email_address_last_verified");

                    b.Property<string>("FnumberAk")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("fnumber_ak")
                        .IsFixedLength();

                    b.Property<string>("LanguageCode")
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .HasColumnName("language_code")
                        .IsFixedLength();

                    b.Property<string>("MailboxAddress")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mailbox_address");

                    b.Property<int?>("MailboxSupplierIdFk")
                        .HasColumnType("integer")
                        .HasColumnName("mailbox_supplier_id_fk");

                    b.Property<string>("MobilePhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("mobile_phone_number");

                    b.Property<DateTime?>("MobilePhoneNumberLastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("mobile_phone_number_last_updated");

                    b.Property<DateTime?>("MobilePhoneNumberLastVerified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("mobile_phone_number_last_verified");

                    b.Property<bool?>("Reservation")
                        .HasColumnType("boolean")
                        .HasColumnName("reservation");

                    b.Property<string>("X509Certificate")
                        .HasColumnType("text")
                        .HasColumnName("x509_certificate");

                    b.HasKey("ContactAndReservationUserId")
                        .HasName("person_pkey");

                    b.HasIndex("MailboxSupplierIdFk");

                    b.HasIndex(new[] { "FnumberAk" }, "person_fnumber_ak_key")
                        .IsUnique();

                    b.ToTable("person", "contact_and_reservation");
                });

            modelBuilder.Entity("Altinn.Profile.Integrations.Entities.Person", b =>
                {
                    b.HasOne("Altinn.Profile.Integrations.Entities.MailboxSupplier", "MailboxSupplierIdFkNavigation")
                        .WithMany("People")
                        .HasForeignKey("MailboxSupplierIdFk")
                        .HasConstraintName("fk_mailbox_supplier");

                    b.Navigation("MailboxSupplierIdFkNavigation");
                });

            modelBuilder.Entity("Altinn.Profile.Integrations.Entities.MailboxSupplier", b =>
                {
                    b.Navigation("People");
                });
#pragma warning restore 612, 618
        }
    }
}
